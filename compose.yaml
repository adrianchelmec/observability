version: '3.8'

volumes:
  prometheus_data: {}

services:
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100

# http://localhost:9100/metrics

  prometheus:
    image: prom/prometheus:v2.50.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    links:
      - node-exporter

# http://localhost:9090/

  alertmanager:
    image: prom/alertmanager:v0.27.0
    ports:
      - 9093:9093
    restart: always
    # command:
    #   - '-config.file=/etc/alertmanager/config.yml'
    #   - '-storage.path=/alertmanager'
    links:
      - prometheus

# http://localhost:9093/

  grafana:
    image: grafana/grafana:10.0.12
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    links:
      - prometheus

# http://localhost:3000/

# http://prometheus:9090